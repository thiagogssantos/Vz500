# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
canbus_uuid: 3cbbbfd7cb20

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 4.722306
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_pin: EBBCan: PA3
sensor_type: Generic 3950 #EPCOS 100K B57560G104F
min_temp: 0
max_temp: 280
min_extrude_temp: 17
max_power: 0.6
max_extrude_cross_section: 500 
max_extrude_only_distance: 1100

#pressure_advance: 0.038 #PLA 0.6
pressure_advance: 0.042  #PLA 0.4
#pressure_advance: 0.023  #ABS 0.4
pressure_advance_smooth_time: 0.010

#control: pid #240
#pid_Kp: 15.960
#pid_Ki: 0.806
#pid_Kd: 79.000

#control: pid #220
#pid_Kp: 14.972
#pid_Ki: 1.085
#pid_Kd: 51.658

control: pid #210
pid_Kp: 14.524
pid_Ki: 0.864
pid_Kd: 61.003


[input_shaper]
shaper_freq_x: 73.6
shaper_type_x: mzv
damping_ratio_x: 0.037

shaper_freq_y: 37
shaper_type_y: mzv
damping_ratio_y: 0.051

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[shaketune]
 result_folder: ~/printer_data/config/ShakeTune_results
# Path where the processed results will be stored. If the folder doesn't exist, it will be automatically created. You can change this if you'd like to store results in a different location.
 number_of_results_to_keep: 10
# This setting defines how many results you want to keep in the result folder. Once the specified number is exceeded,
# older results will be automatically deleted to free up space on the SD card and avoid cluttering the results folder.
 keep_raw_data: False
# If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer .stdata files in the results folder.
# This can be useful for debugging or archiving purposes. Please always attach them when reporting any issues on GitHub or Discord.
 show_macros_in_webui: True
# Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
# If set to False, the macros will be hidden but still accessible from the console by typing their names manually, which can be useful if you prefer to encapsulate them into your own macros.
 timeout: 600
# This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating graphs from a .stdata file. 10 minutes should be
# more than enough in most cases, but if you have slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
 measurements_chunk_size: 2
# Each Shake&Tune command uses the accelerometer to take multiple measurements. By default, Shake&Tune will write a chunk of data to disk every two measurements,
# and at the end of the command will merge these chunks into the final .stdata file for processing. "2" is a very conservative setting to
# avoid Klipper Timer Too Close errors on lower end devices with little RAM, and should work for everyone. However, if you are using a powerful computer,
# you may wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing the chunk and avoid stressing the filesystem too much.
 max_freq: 200
# This setting defines the maximum frequency at which the calculation of the power spectral density is cutoff.
# The default value should be fine for most machines and accelerometer combinations and avoid touching it unless you know what you're doing.
 dpi: 300
# Controls the resolution of the generated graphs. The default value of 300 dpi was optimized and strikes a balance between performance and readability,
# ensuring that graphs are clear without using too much RAM to generate them. Usually, you shouldn't need to change this value.


[tmc2209 extruder]
uart_pin: EBBCan: PA15
sense_resistor: 0.110
run_current: 0.800
#stealthchop_threshold: 999999
interpolate: false

#[fan]
#pin: EBBCan: PA1


[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9

#[filament_switch_sensor switch_sensor]
#switch_pin: EBBCan:PB4

#[filament_motion_sensor motion_sensor]
#switch_pin: ^EBBCan:PB3



